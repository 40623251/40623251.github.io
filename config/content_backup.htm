<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/cmsimde.git</a></p>
<h1>Week</h1>
<p><a href="https://40623251.github.io/cd2020/content/Week1~Week5.html">Week1~Week5</a></p>
<p><a href="https://40623251.github.io/cd2020/content/Week6~Week9.html">Week6~Week9</a></p>
<p><a href="https://40623251.github.io/cd2020/content/Week10~Week14.html">Week10~Week14</a></p>
<p><a href="https://40623251.github.io/cd2020/content/Week15~Week18.html">Week15~Week18</a></p><h2>Week1~Week5</h2>
<p>建立個人倉儲cd2020</p>
<ol>
<li>
<pre>下載<a href="https://mde.tw/cad2019/content/index.html">2019Fall</a>可攜套件，解壓縮後開啟並啟動Start</pre>
</li>
<li>
<pre>登入Github，創建新倉儲，命名為cd2020</pre>
</li>
<li>
<pre>在可攜套件開啟的Cmd 用<span>command進入tmp資料夾</span></pre>
</li>
<li>
<pre>輸入 git clone <a href="https://github.com/個人學號/cd2020">https://github.com/個人學號/cd2020</a> 來下載個人倉儲</pre>
</li>
<li>
<pre>下載完成後進入cd2020資料夾，輸入<span>git submodule add  <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 來添加子模塊</span></pre>
</li>
<li>
<pre>進入cmsimde資料夾，將up_dir資料夾裡的所有項目複製到cd2020裡</pre>
</li>
<li>
<pre>完成後用Cmd在cmsimde資料夾裡輸入python wsgi.py，即可編輯網誌</pre>
</li>
<li>
<pre>編輯完倉儲內的資料後，在Cmd依序輸入git status &gt; git add . &gt; git commit -m "標題" &gt; git push完成資料上傳</pre>
</li>
<li>
<pre>在Github個人倉儲cd2020裡，將倉儲的branch改成Master branch 完成倉儲建立</pre>
</li>
</ol>
<hr/>
<p>更新Python版本</p>
<ol>
<li>
<pre>從<a href="https://www.python.org/">官方網站</a>下載<a href="https://www.python.org/ftp/python/3.8.2/python-3.8.2.exe">3.8.2</a>版本(64位元)</pre>
</li>
<li>
<pre>開啟安裝檔，選擇自定義安裝</pre>
</li>
<li>
<pre>將pip選項<span style="color: #ff0000;">取消</span>勾選後再選擇安裝位置，完成安裝</pre>
</li>
<li>
<pre>用編輯器開啟start.bat，將編碼裡所有py373改成py382後儲存，重新啟動可攜套件</pre>
</li>
<li>
<pre>在cmd裡輸入python get-pip.py來安裝pip套件</pre>
</li>
<li>
<pre>輸入python pip install <span style="color: #ff0000;">軟件名稱</span> 來安裝軟件</pre>
</li>
<li>
<pre>安裝的軟件有<span style="color: #ff0000;">Flask Markdown Ixml bs4 flask_cors pelican leo</span><span></span></pre>
</li>
<li>
<pre>完成Python版本更新</pre>
</li>
</ol>
<p>組別分工</p>
<ul>
<li>在線上直播討論並分工<iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="//www.youtube.com/embed/r0AABAp474U" width="560"></iframe></li>
</ul>
<h2>Week6~Week9</h2>
<h2>Week10~Week14</h2>
<h2>Week15~Week18</h2>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://127.0.0.1:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>